{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedTodoID","onTodoSelect","className","map","todo","id","title","completed","isSelected","classNames","type","onClick","TodoFilter","filter","onFilterSelect","onQueryChange","onShuffle","useState","input","setInput","applyQuery","useCallback","debounce","value","onChange","target","All","Active","Completed","placeholder","style","pointerEvents","Boolean","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","isUserLoaded","setIsUserLoaded","user","setUser","userId","useEffect","getUser","userFromServer","href","email","name","App","isDataLoaded","setIsDataLoaded","initialTodos","setInitialTodos","setTodos","selectedTodo","setSelectedTodo","setFilter","searchQuery","setSearchQuery","todosFromServer","prevTodos","toLowerCase","includes","handleQueryChange","prev","shuffle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bf536cb.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoID: number,\n  onTodoSelect: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoID,\n  onTodoSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n          const isSelected = selectedTodoID === id;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': isSelected,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onTodoSelect(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames(\n                        'far',\n                        {\n                          'fa-eye': !isSelected,\n                          'fa-eye-slash': isSelected,\n                        },\n                      )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { debounce } from 'lodash';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filter: Filter,\n  onFilterSelect: (value: Filter) => void,\n  onQueryChange: (value: string) => void,\n  onShuffle: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  onFilterSelect,\n  onQueryChange,\n  onShuffle,\n}) => {\n  const [input, setInput] = useState('');\n\n  const applyQuery = useCallback(\n    debounce(onQueryChange, 600),\n    [],\n  );\n\n  const handleInputChange = (\n    { target: { value } }: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setInput(value);\n    applyQuery(value);\n  };\n\n  const handleInputClean = () => {\n    setInput('');\n    applyQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={({ target }) => onFilterSelect(target.value as Filter)}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={input}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {Boolean(input) && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleInputClean}\n            />\n          )}\n        </span>\n      </p>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => onShuffle()}\n      >\n        Shuffle\n      </button>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onClose: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [isUserLoaded, setIsUserLoaded] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  useEffect(() => {\n    getUser(userId).then((userFromServer) => {\n      setUser(userFromServer);\n      setIsUserLoaded(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isUserLoaded\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => onClose(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { shuffle } from 'lodash';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => {\n      setInitialTodos(todosFromServer);\n      setTodos(todosFromServer);\n      setIsDataLoaded(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    switch (filter) {\n      case Filter.All:\n        setTodos(initialTodos);\n        break;\n\n      case Filter.Active:\n        setTodos(initialTodos.filter(todo => !todo.completed));\n        break;\n\n      case Filter.Completed:\n        setTodos(initialTodos.filter(todo => todo.completed));\n        break;\n\n      default:\n        break;\n    }\n\n    setTodos(\n      prevTodos => prevTodos.filter(\n        todo => todo.title.toLowerCase().includes(searchQuery.toLowerCase()),\n      ),\n    );\n  }, [filter, searchQuery, initialTodos]);\n\n  const handleTodoSelect = (todo: Todo | null) => (\n    setSelectedTodo(todo)\n  );\n\n  const handleFilterSelect = (value: Filter) => {\n    setFilter(value);\n  };\n\n  const handleQueryChange = useCallback(\n    (value: string) => (setSearchQuery(value)),\n    [],\n  );\n\n  const hanldeShuffle = () => (\n    setInitialTodos(prev => shuffle(prev))\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                onFilterSelect={handleFilterSelect}\n                onQueryChange={handleQueryChange}\n                onShuffle={hanldeShuffle}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isDataLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todos}\n                    onTodoSelect={handleTodoSelect}\n                    selectedTodoID={selectedTodo?.id || 0}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}